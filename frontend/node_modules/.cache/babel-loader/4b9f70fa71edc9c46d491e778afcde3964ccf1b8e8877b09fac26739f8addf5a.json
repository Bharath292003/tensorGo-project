{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91866\\\\Desktop\\\\tensorGo\\\\frontend\\\\src\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const navigate = useNavigate();\n\n  // useEffect(() => {\n  //   axios.get('http://localhost:5000/', { withCredentials: true })\n  //     .then(response => {\n  //       if (response.data.authenticated) {\n  //         setIsAuthenticated(true);\n  //         navigate('/invoices');\n  //       }\n  //     })\n  //     .catch(error => console.error('Error checking authentication:', error));\n  // }, [navigate]);\n\n  const handleLogin = () => {\n    window.location.href = 'http://localhost:5000/auth/google';\n  };\n  if (isAuthenticated) {\n    return null; // or a loading spinner\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login with Google\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogin,\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"fFLPwuop1m+61Uu3ULzyaFpmYmI=\", false, function () {\n  return [useNavigate];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","axios","jsxDEV","_jsxDEV","Home","_s","isAuthenticated","setIsAuthenticated","navigate","handleLogin","window","location","href","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/91866/Desktop/tensorGo/frontend/src/Home.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nconst Home = () => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  // useEffect(() => {\r\n  //   axios.get('http://localhost:5000/', { withCredentials: true })\r\n  //     .then(response => {\r\n  //       if (response.data.authenticated) {\r\n  //         setIsAuthenticated(true);\r\n  //         navigate('/invoices');\r\n  //       }\r\n  //     })\r\n  //     .catch(error => console.error('Error checking authentication:', error));\r\n  // }, [navigate]);\r\n\r\n  const handleLogin = () => {\r\n    window.location.href = 'http://localhost:5000/auth/google';\r\n  };\r\n\r\n  if (isAuthenticated) {\r\n    return null; // or a loading spinner\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Login with Google</h1>\r\n      <button onClick={handleLogin}>Login</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAMS,QAAQ,GAAGR,WAAW,CAAC,CAAC;;EAE9B;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAMS,WAAW,GAAGA,CAAA,KAAM;IACxBC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,mCAAmC;EAC5D,CAAC;EAED,IAAIN,eAAe,EAAE;IACnB,OAAO,IAAI,CAAC,CAAC;EACf;EAEA,oBACEH,OAAA;IAAAU,QAAA,gBACEV,OAAA;MAAAU,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1Bd,OAAA;MAAQe,OAAO,EAAET,WAAY;MAAAI,QAAA,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzC,CAAC;AAEV,CAAC;AAACZ,EAAA,CA7BID,IAAI;EAAA,QAESJ,WAAW;AAAA;AAAAmB,EAAA,GAFxBf,IAAI;AA+BV,eAAeA,IAAI;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}