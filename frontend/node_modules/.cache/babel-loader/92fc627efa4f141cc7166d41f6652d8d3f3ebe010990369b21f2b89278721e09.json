{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91866\\\\Desktop\\\\tensorGo\\\\frontend\\\\src\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport './styles/home.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const navigate = useNavigate();\n  useEffect(() => {\n    axios.get('http://localhost:5000/', {\n      withCredentials: true\n    }).then(response => {\n      if (response.data.authenticated) {\n        setIsAuthenticated(true);\n        navigate('/invoices');\n      }\n    }).catch(error => console.error('Error checking authentication:', error));\n  }, [navigate]);\n  const handleLogin = () => {\n    window.location.href = 'http://localhost:5000/auth/google';\n  };\n  if (isAuthenticated) {\n    return null; // or a loading spinner\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"h+xcTbG3Lgr87EDneWrcj9j4fAU=\", false, function () {\n  return [useNavigate];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","axios","jsxDEV","_jsxDEV","Home","_s","isAuthenticated","setIsAuthenticated","navigate","get","withCredentials","then","response","data","authenticated","catch","error","console","handleLogin","window","location","href","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/91866/Desktop/tensorGo/frontend/src/Home.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport './styles/home.css';  \r\n\r\nconst Home = () => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    axios.get('http://localhost:5000/', { withCredentials: true })\r\n      .then(response => {\r\n        if (response.data.authenticated) {\r\n          setIsAuthenticated(true);\r\n          navigate('/invoices');\r\n        }\r\n      })\r\n      .catch(error => console.error('Error checking authentication:', error));\r\n  }, [navigate]);\r\n\r\n  const handleLogin = () => {\r\n    window.location.href = 'http://localhost:5000/auth/google';\r\n  };\r\n\r\n  if (isAuthenticated) {\r\n    return null; // or a loading spinner\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div>\r\n\r\n      </div>\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3B,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAMS,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAE9BF,SAAS,CAAC,MAAM;IACdG,KAAK,CAACQ,GAAG,CAAC,wBAAwB,EAAE;MAAEC,eAAe,EAAE;IAAK,CAAC,CAAC,CAC3DC,IAAI,CAACC,QAAQ,IAAI;MAChB,IAAIA,QAAQ,CAACC,IAAI,CAACC,aAAa,EAAE;QAC/BP,kBAAkB,CAAC,IAAI,CAAC;QACxBC,QAAQ,CAAC,WAAW,CAAC;MACvB;IACF,CAAC,CAAC,CACDO,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC,CAAC;EAC3E,CAAC,EAAE,CAACR,QAAQ,CAAC,CAAC;EAEd,MAAMU,WAAW,GAAGA,CAAA,KAAM;IACxBC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,mCAAmC;EAC5D,CAAC;EAED,IAAIf,eAAe,EAAE;IACnB,OAAO,IAAI,CAAC,CAAC;EACf;EAEA,oBACEH,OAAA;IAAKmB,SAAS,EAAC,WAAW;IAAAC,QAAA,eACxBpB,OAAA;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEK;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEH,CAAC;AAEV,CAAC;AAACtB,EAAA,CA/BID,IAAI;EAAA,QAESJ,WAAW;AAAA;AAAA4B,EAAA,GAFxBxB,IAAI;AAiCV,eAAeA,IAAI;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}